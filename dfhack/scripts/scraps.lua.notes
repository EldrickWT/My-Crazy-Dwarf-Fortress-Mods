:lua dfhack.gui.getSelectedUnit().flags1.diplomat = 0
:lua dfhack.gui.getSelectedUnit().flags1.merchant = 0
:lua dfhack.gui.getSelectedUnit().flags1.forest = 0
:lua dfhack.gui.getSelectedUnit().flags2.resident = 0
:lua dfhack.gui.getSelectedUnit().civ_id = df.global.ui.civ_id
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true))

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true).." will be butchered.") unit.flags2.slaughter=true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true).." is disarmed.") unit.flags1.suppress_wield=true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true).." is ready for battle.") unit.profession=99 unit.profession2=102

:lua for _,v in ipairs(df.global.world.raws.buildings.all) do print(v.code) end
:lua for _,v in ipairs(df.global.world.raws.itemdefs.all) do print(v.code) end
:lua for _,v in ipairs(df.global.world.raws.reactions.all) do print(v.code) end
:lua for _,v in ipairs(df.global.world.raws.interactions) do print(v.name) end

:lua for _,v in ipairs(df.global.world.units.active) do printall(v) end

:lua for _,v in ipairs(df.global.world.units.active) do if not (v.civ_id == df.global.ui.civ_id) then print(df.global.world.raws.creatures.all[v.race].creature_id) end end

//fix/dead-units
:lua for _,v in ipairs(df.global.world.units.active) do if not (v.civ_id == df.global.ui.civ_id) then starter=("Creature: "..df.global.world.raws.creatures.all[v.race].creature_id.." ENTITY Race: ") if not (v.civ_id == -1) then ender=(df.global.world.entities.all[v.civ_id].entity_raw.code.. " ENTITY Civilization Name: " ..dfhack.TranslateName(df.global.world.entities.all[v.civ_id].name,true)) else ender=("Wild Population") end print(starter,ender) end end

:lua item=dfhack.gui.getSelectedItem() print(dfhack.matinfo.decode(item.mat_type, item.mat_index))
:lua item=dfhack.gui.getSelectedItem() print(dfhack.matinfo.getToken(item))

:lua for _,v in ipairs(df.global.world.entities.all) do if not (v.type > 0) then print(v.entity_raw.code.. " is the pure ENTITY for "..dfhack.TranslateName(v.name,true), v.id) end end
:lua for _,v in ipairs(df.global.world.entities.all) do if not (v.type > 0) then if (v.entity_raw.code == "KAPA") then print(dfhack.TranslateName(v.name,true)) end end end

:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.profession >= 103) or (v.profession2 >= 103) then v.profession = 102 v.profession2 = 102 v.relations.following = nil print(dfhack.TranslateName(v.name)) end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then v.flags1.ridden=false end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then v.flags1.rider=false end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then v.flags1.on_ground=false end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then v.relations.rider_mount_id=-1 end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.mood==8) then v.mood=-1 end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.counters.soldier_mood==2) then v.counters.soldier_mood_countdown=1 end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.FISH==true) then v.status.labors.FISH=false end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.BEEKEEPING==true) then v.status.labors.BEEKEEPING=false end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.RECOVER_WOUNDED==false) then v.status.labors.RECOVER_WOUNDED=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.FEED_WATER_CIVILIANS==false) then v.status.labors.FEED_WATER_CIVILIANS=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_STONE==false) then v.status.labors.HAUL_STONE=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_WOOD==false) then v.status.labors.HAUL_WOOD=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_BODY==false) then v.status.labors.HAUL_BODY=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_FOOD==false) then v.status.labors.HAUL_FOOD=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_REFUSE==false) then v.status.labors.HAUL_REFUSE=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_ITEM==false) then v.status.labors.HAUL_ITEM=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_FURNITURE==false) then v.status.labors.HAUL_FURNITURE=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.HAUL_ANIMAL==false) then v.status.labors.HAUL_ANIMAL=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.PUSH_HAUL_VEHICLE==false) then v.status.labors.PUSH_HAUL_VEHICLE=true end end end
:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.status.labors.CLEAN==false) then v.status.labors.CLEAN=true end end end


:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.race == df.global.ui.race_id) then if not (v.relations.following == nil) then print(dfhack.TranslateName(v.relations.following.name).." is followed by "..dfhack.TranslateName(v.name)) end end end end

:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) then if (v.race == df.global.ui.race_id) then if not (v.relations.following == nil) then print(dfhack.TranslateName(v.relations.following.name).." is followed by "..dfhack.TranslateName(v.name)) v.relations.following=nil print("... no Longer.")end end end end

:lua for _,v in ipairs(df.global.world.units.active) do if (v.civ_id == df.global.ui.civ_id) and not (v.flags1.dead) and (v.mood > -1) and (v.mood < 7) then print(dfhack.TranslateName(v.name,true).." is nuts.. and worthless trash *elitist snort*... but tasty.") v.flags2.slaughter=true end end

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.pos.x=131 unit.pos.y=39 unit.pos.z=117

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.mood=7

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit)
//child
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 103 unit.profession2 = 103
//std
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 102 unit.profession2 = 102
//war
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 99 unit.profession2 = 99
//hunting
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 98 unit.profession2 = 98

:lua for _,v in ipairs(df.global.ui.main.fortress_entity.populations) do printall(v) end

//sentience
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) df.global.world.raws.creatures.all[unit.race].flags.CASTE_CAN_SPEAK = true df.global.world.raws.creatures.all[unit.race].flags.CASTE_CAN_LEARN = true

:lua for _,v in ipairs(df.global.world.raws.creatures.all) do if (v.flags.DOES_NOT_EXIST == true) then print(_,v.creature_id) end end
:lua df.global.world.raws.creatures.all[556].flags.DOES_NOT_EXIST == false

:lua for _,v in ipairs(df.global.world.units.all) do if (df.global.world.raws.creatures.all[v.race].flags.DOES_NOT_EXIST == true) then print(_,v.creature_id) end end

:lua for _,v in ipairs(df.global.world.units.active) do if (df.global.world.raws.creatures.all[v.race].flags.CASTE_CAN_SPEAK == true) then print(dfhack.TranslateName(v.name,true)," is a ", df.global.world.raws.creatures.all[v.race].creature_id) end end

:lua for _,v in ipairs(df.global.world.units.all) do if (df.global.world.raws.creatures.all[v.race].flags.UNIQUE_DEMON == true) then print(_,v.creature_id) end end

:lua unit=dfhack.gui.getSelectedUnit() df.global.world.raws.creatures.all[unit.race].caste[unit.caste].fixed_temp=60001

:lua unit=dfhack.gui.getSelectedUnit() print(df.global.world.raws.creatures.all[unit.race].caste[unit.caste].fixed_temp)


:lua for _,unit in ipairs(df.global.world.units.active) do print(dfhack.TranslateName(unit.name,true).. " is a " ..df.global.world.raws.creatures.all[unit.race].creature_id.. "(" ..df.global.world.raws.creatures.all[unit.race].caste[unit.caste].caste_name[0]..") and their temp is " ..df.global.world.raws.creatures.all[unit.race].caste[unit.caste].fixed_temp.." Urist") end