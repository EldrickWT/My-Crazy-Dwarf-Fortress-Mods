fix/dead-units-slaughtered
fix/growthbug
fix/growthbug start
:lua df.global.cursor.x=111 df.global.cursor.y=1 df.global.cursor.z=124
:lua dfhack.onStateChange.onLoadBloodDel = function(state) if state == SC_WORLD_LOADED then dfhack.run_command('repeat -name blooddeljorb -time 1 -timeUnits months -command fix/blood-del') end end
:lua dfhack.onStateChange.onLoadConscript = function(state) if state == SC_WORLD_LOADED then dfhack.run_command('repeat -name conscriptjorb -time 1 -timeUnits months -command conscript') end end
:lua dfhack.onStateChange.onLoadGrowthBug = function(state) if state == SC_WORLD_LOADED then dfhack.run_command('repeat -name growthbugjorb -time 1 -timeUnits months -command fix/growth-bug') end end
:lua dfhack.onStateChange.onLoadRegrass = function(state) if state == SC_WORLD_LOADED then dfhack.run_command('repeat -name regrassjorb -time 1 -timeUnits months -command regrass') end end
:lua for _,entity in ipairs(df.global.world.entities.all) do if not (entity.type > 0) then if (entity.entity_raw.code == "KAPA") then print(dfhack.TranslateName(entity.name,true)) end end end
:lua for _,entity in ipairs(df.global.world.entities.all) do if not (entity.type > 0) then if (entity.entity_raw.code == "KAPA") then print(dfhack.TranslateName(entity.name,true), entity.id) end end end
:lua for _,entity in ipairs(df.global.world.entities.all) do if not (entity.type > 0) then print(entity.entity_raw.code.. " is the pure ENTITY for "..dfhack.TranslateName(entity.name,true), entity.id) end end
:lua for _,unit in ipairs(df.global.world.entities.all) do if not (unit.type > 0) then print(unit.entity_raw.code.. " is the pure ENTITY for "..dfhack.TranslateName(unit.name,true), unit.id) end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.race == df.global.ui.race_id) then if not (unit.relations.following == nil) then print(dfhack.TranslateName(unit.relations.following.name).." is followed by "..dfhack.TranslateName(unit.name)) end end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then unit.flags3.emotionally_overloaded = FALSE end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if not (unit.relations.following == nil) then print(dfhack.TranslateName(unit.relations.following.name).." is followed by "..dfhack.TranslateName(unit.name)) end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.counters.death_id ~= -1) then death=df.death_info.find(unit.counters.death_id) death.flags.discovered=true end end
:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then if (unit.flags1.hidden_in_ambush==true) or (unit.flags1.hidden_ambusher==true) then print(dfhack.TranslateName(unit.name,true).. " is a " ..df.global.world.raws.creatures.all[unit.race].creature_id.. "(" ..df.global.world.raws.creatures.all[unit.race].caste[unit.caste].caste_name[0]..") and their temp is " ..df.global.world.raws.creatures.all[unit.race].caste[unit.caste].fixed_temp.." Urist") end end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then print(dfhack.TranslateName(unit.name,true)) end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then print(unit.race) end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then printall(unit.race) end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags1.forest==true then unit.flags1.left=true end end
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags1.merchant==true then unit.flags1.left=true end end
:lua for _,unit in ipairs(df.global.world.units.active) do unit.flags1.on_ground=false end
:lua for _,unit in ipairs(df.global.world.units.active) do unit.relations.following = nil end
:lua for _,unit in ipairs(df.global.world.units.active) do unit.relations.pet_owner_id = -1 end
:lua for _,unit in ipairs(df.global.world.units.active) do unit.status.happiness = 4000 end
:lua item=dfhack.gui.getSelectedItem() dfhack.items.moveToGround(item,{x=68,y=92,z=119})
:lua item=dfhack.gui.getSelectedItem() print(dfhack.matinfo.getToken(item))
:lua item=dfhack.gui.getSelectedItem() print(item.specific_refs)
:lua item=dfhack.gui.getSelectedItem() printall(item)
:lua item=dfhack.gui.getSelectedItem() printall(item.flags)
:lua item=dfhack.gui.getSelectedItem() printall(item.flags2)
:lua item=dfhack.gui.getSelectedItem() printall(item.general_refs)
:lua item=dfhack.gui.getSelectedItem() printall(item.general_refs[0])
:lua item=dfhack.gui.getSelectedItem() printall(item.pos)
:lua item=dfhack.gui.getSelectedItem() printall(item.specific_refs)
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id perp=df.unit.find(unit) print(df.creature_raw.find(perp.race).creature_id) perp.flags1.dead=false perp.flags1.merchant=false perp.flags1.incoming=false perp.flags1.ridden=false
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id perp=df.unit.find(unit) print(df.creature_raw.find(perp.race).creature_id) printall(perp)
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id perp=df.unit.find(unit) print(df.creature_raw.find(perp.race).creature_id) printall(perp.flags1)
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id perp=df.unit.find(unit) print(dfhack.TranslateName(perp.name,true))
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id perp=df.unit.find(unit) printall(perp)
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id perp=df.unit.find(unit) printall(perp) print(df.creature_raw.find(perp.race).creature_id)
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id printall(df.unit.find(unit))
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id printall(df.unit.find(unit).name)
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id printall(df.unit.find(unit).name.words)
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id printall(df.unit.find(unit).pos)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) 
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) if unit.flags1.merchant==true then unit.flags1.left=true end
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) print(df.historical_figure.find((unit.id)))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) print(dfhack.TranslateName((df.global.world.history.figures[unit.hist_figure_id].name),true))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) print(dfhack.TranslateName((df.global.world.history.figures[unit.id].name),true))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) print(dfhack.TranslateName(df.historical_figure.find(unit.hist_figure_id).name,true))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) print(dfhack.TranslateName(df.historical_figure.find(unit.id).name,true))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) print(unit.counters.death_id)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(df.historical_figure.find((unit.id)))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(dfhack.TranslateName(df.historical_figure.find(unit.id).name,true))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.animal)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.counters)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.counters.death_id)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.flags1)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.flags1) unit.flags1.rider=false
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.name)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.name) unit.name.has_name=true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.name) unit.name.nickname="Bump"
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.path)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.path.dest)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.path.dest) unit.pos.x=68 unit.pos.y=40 unit.pos.z=124
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.pos)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.relations)
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.relations) unit.following=-1
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.relations) unit.following=nil
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.relations) unit.relations.following=nil
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.flags1.left=true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.path.dest.x=146 unit.pos.x=146 unit.path.dest.y=100 unit.pos.y=100 unit.path.dest.z=124 unit.pos.z=124
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.pos.x=146 unit.pos.y=100 unit.pos.z=124
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.pos.x=unit.path.dest.x unit.pos.y=unit.path.dest.y unit.pos.z=unit.path.dest.z
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 99 unit.profession2 = 99
:lua ~df.creature_raw.find(df.global.ui.race_id).creature_id
:lua ~df.global.cursor
:lua ~df.global.ui
:lua ~df.global.ui.civ_id
:lua ~df.global.ui.main
:lua ~df.global.ui.main.fortress_entity
:lua ~df.global.ui.main.fortress_entity.id
:lua ~df.global.ui.race_id
:lua ~df.global.world.entities.all[df.global.ui.civ_id]
:lua ~df.global.world.entities.all[df.global.ui.main.fortress_entity.id]
:lua ~df.global.world.raws.creatures.all[df.global.ui.race_id].creature_id
:lua ~df.global.world.raws.creatures.all[df.historical_entity.find(df.global.ui.civ_id).race].creature_id
:lua ~df.global.world.raws.creatures.all[df.historical_entity.find(df.global.ui.main.fortress_entity.id).race].creature_id
:lua ~df.historical_entity.find(df.global.ui.main.fortress_entity.id)
autodump
autodump destroy
autodump forbidden
autodump help
binpatch apply 5forbiddenunlock
binpatch apply armorstand-capacity
binpatch apply custom-reagent-size
binpatch apply deconstruct-heapfall
binpatch apply deconstruct-teleport
binpatch apply hospital-overstocking
binpatch apply training-ammo
binpatch apply weaponrack-unassign
bprobe
brainwash
civviesplosion
clean all mud snow
cleanowned all
conscript
createitem ARMOR:ITEM_ARMOR_BREASTPLATE INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_CAPE INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_CLOAK INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_COAT INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_DRESS INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_LEATHER INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_MAIL_SHIRT INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_ROBE INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_SHIRT INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_TOGA INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_TUNIC INORGANIC:LHIGATE 10
createitem ARMOR:ITEM_ARMOR_VEST INORGANIC:LHIGATE 10
createitem BARREL INORGANIC:LHIGATE 100
createitem BIN INORGANIC:LHIGATE 100
createitem BOX INORGANIC:LHIGATE 100
createitem COFFIN PLANT_MAT:SUNGWOOD:WOOD 30
createitem COFFIN SUNGWOOD 30
createitem GLOVES:ITEM_GLOVES_GAUNTLETS INORGANIC:LHIGATE 10
createitem GLOVES:ITEM_GLOVES_GLOVES INORGANIC:LHIGATE 10
createitem HELM:ITEM_HELM_CAP INORGANIC:LHIGATE 10
createitem HELM:ITEM_HELM_HELM INORGANIC:LHIGATE 10
createitem PANTS:ITEM_PANTS_GREAVES INORGANIC:LHIGATE 10
createitem PANTS:ITEM_PANTS_PANTS INORGANIC:LHIGATE 10
createitem PANTS:ITEM_PANTS_SKIRT_SHORT INORGANIC:LHIGATE 10
createitem SHIELD:ITEM_SHIELD_SHIELD INORGANIC:LHIGATE 10
createitem SHOES:ITEM_SHOES_BOOTS INORGANIC:LHIGATE 10
createitem SHOES:ITEM_SHOES_SOCKS INORGANIC:LHIGATE 10
createitem SLAB PLANT_MAT:SUNGWOOD:WOOD 30
createitem TOOL:ITEM_TOOL_LARGE_POT INORGANIC:LHIGATE 100
createitem WEAPON:ITEM_WEAPON_AXE_BATTLE INORGANIC:LHIGATE 10
createitem WEAPON:ITEM_WEAPON_PICK INORGANIC:LHIGATE 10
cursecheck
deramp
enable automaterial
enable dwarfmonitor nestboxes fix-armory infiniteSky resume
enable manipulator
enable search
fastdwarf 1 0
fastdwarf 2 0
fastdwarf 2 1
fix-dump
fix/blood-del
fix/cloth-stockpile enable
fix/fat-dwarves
fix/growthbug enable
fix/stable-temp
fix/stable-temp apply
fixmakeown
full-heal
gui/dfstatus
heal2
help slam
itemsyndrome
keybinding
keybinding list
keybinding set Ctrl-Alt-R "tweak clear-missing"
keybinding set Ctrl-Shift-Alt-R "tweak clear-missing"
keybinding set Ctrl-Shift-E ":lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 99 unit.profession2 = 99"
keybinding set Ctrl-Shift-Q "gui/workshop-job"
keybinding set Ctrl-Shift-R "tiletypes-here-point"
keybinding set Ctrl-Shift-W "hackWish"
keybinding set Shift-K "slayrace him"
liquids
log-region
ls
ls -a
probe
putontable
rb_eval df.world.items.all.each { |it| it.flags.dump = false }
rb_eval df.world.items.all.each { |it| it.flags.forbid = false }
rb_eval df.world.items.all.each { |it| it.flags.foreign = false }
rb_eval df.world.items.all.each { |it| it.flags.hidden = false }
rb_eval df.world.items.all.each { |it| it.flags.trader = false }
regrass
repeat -name blooddeljorb -time 1 -timeUnits months -command fix/blood-del
repeat -name conscriptjorb -time 1 -timeUnits months -command conscript
repeat -name growthbugjorb -time 1 -timeUnits months -command fix/growth-bug
repeat -name regrassjorb -time 1 -timeUnits months -command regrass
reveal hell
showmood
siren
slam 10
slam 100
slam 1000
slam 10000
slayrace him
soundsense-season
tweak
tweak adamantine-cloth-wear
tweak clear-missing
tweak fix-dimensions
tweak hive-crash
tweak makeown
tweak military-color-assigned
tweak military-stable-assign
tweak stable-temp
unreveal
weather clear
zoom 111 1 124
zoom help
zoom help[
