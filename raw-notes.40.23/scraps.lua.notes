:lua dfhack.gui.getSelectedUnit().flags1.diplomat = 0
:lua dfhack.gui.getSelectedUnit().flags1.merchant = 0
:lua dfhack.gui.getSelectedUnit().flags1.forest = 0
:lua dfhack.gui.getSelectedUnit().flags2.resident = 0
:lua dfhack.gui.getSelectedUnit().civ_id = df.global.ui.civ_id
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true))

:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.flags1.forest==true or unit.flags1.diplomat==true or unit.flags1.merchant==true) then unit.flags1.left = true end end

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true).." will be butchered.") unit.flags2.slaughter=true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true).." is disarmed.") unit.flags1.suppress_wield=true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true).." is ready for battle.") unit.profession=99 unit.profession2=102

:lua for _,buildings in ipairs(df.global.world.raws.buildings.all) do print(buildings.code) end
:lua for _,itemdefs in ipairs(df.global.world.raws.itemdefs.all) do print(itemdefs.code) end
:lua for _,reactions in ipairs(df.global.world.raws.reactions.all) do print(reactions.code) end
:lua for _,interactions in ipairs(df.global.world.raws.interactions) do print(interactions.name) end

:lua for _,unit in ipairs(df.global.world.units.active) do printall(unit) end

:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then print(df.creature_raw.find(unit.race).creature_id) end end

:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead==true) then critter=("Creature: "..df.creature_raw.find(unit.race).creature_id) civ=("Entity Race: ") if not (unit.civ_id == -1) then civ_rawname=df.historical_entity.find(unit.civ_id).entity_raw.code civ_name="Entity Civilization Name: " ..dfhack.TranslateName(df.historical_entity.find(unit.civ_id).name,true) else civ_rawname=("Wild Population") civ_name=("") end print(critter,civ,civ_rawname,civ_name) end end end
:lua unit=dfhack.gui.getSelectedUnit() critter=("Creature: "..df.creature_raw.find(unit.race).creature_id) civ=("Entity Race: ") if not (unit.civ_id == -1) then civ_rawname=df.historical_entity.find(unit.civ_id).entity_raw.code civ_name="Entity Civilization Name: " ..dfhack.TranslateName(df.historical_entity.find(unit.civ_id).name,true) else civ_rawname=("Wild Population") civ_name=("") end print(critter,civ,civ_rawname,civ_name)

:lua item=dfhack.gui.getSelectedItem() printall(item)
:lua item=dfhack.gui.getSelectedItem() print(dfhack.matinfo.decode(item.mat_type, item.mat_index))
:lua item=dfhack.gui.getSelectedItem() print(dfhack.matinfo.getToken(item))

:lua item=dfhack.gui.getSelectedItem() item.flags.in_building=false

:lua for _,entity in ipairs(df.global.world.entities.all) do if not (entity.type > 0) then print(entity.entity_raw.code.. " is the pure ENTITY for "..dfhack.TranslateName(entity.name,true), entity.id) end end
:lua for _,entity in ipairs(df.global.world.entities.all) do if not (entity.type > 0) then if (entity.entity_raw.code == "KAPA") then print(dfhack.TranslateName(entity.name,true), entity.id) end end end

:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.profession >= 103) or (unit.profession2 >= 103) then unit.profession = 102 unit.profession2 = 102 unit.relations.following = nil print(dfhack.TranslateName(unit.name)) end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then unit.flags1.ridden=false end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then unit.flags1.rider=false end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then unit.flags1.on_ground=false end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then unit.relations.rider_mount_id=-1 end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.mood==8) then unit.mood=-1 end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.counters.soldier_mood==2) then unit.counters.soldier_mood_countdown=1 end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.FISH==true) then unit.status.labors.FISH=false end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.BEEKEEPING==true) then unit.status.labors.BEEKEEPING=false end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.RECOVER_WOUNDED==false) then unit.status.labors.RECOVER_WOUNDED=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.FEED_WATER_CIVILIANS==false) then unit.status.labors.FEED_WATER_CIVILIANS=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_STONE==false) then unit.status.labors.HAUL_STONE=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_WOOD==false) then unit.status.labors.HAUL_WOOD=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_BODY==false) then unit.status.labors.HAUL_BODY=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_FOOD==false) then unit.status.labors.HAUL_FOOD=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_REFUSE==false) then unit.status.labors.HAUL_REFUSE=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_ITEM==false) then unit.status.labors.HAUL_ITEM=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_FURNITURE==false) then unit.status.labors.HAUL_FURNITURE=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HAUL_ANIMAL==false) then unit.status.labors.HAUL_ANIMAL=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.HANDLE_VEHICLES==false) then unit.status.labors.HANDLE_VEHICLES=true end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.status.labors.CLEAN==false) then unit.status.labors.CLEAN=true end end end


:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.race == df.global.ui.race_id) then if not (unit.relations.following == nil) then print(dfhack.TranslateName(unit.relations.following.name).." is followed by "..dfhack.TranslateName(unit.name)) end end end end

:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.race == df.global.ui.race_id) then if not (unit.relations.following == nil) then print(dfhack.TranslateName(unit.relations.following.name).." is followed by "..dfhack.TranslateName(unit.name)) unit.relations.following=nil print("... no Longer.")end end end end

:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) and not (unit.flags1.dead) and (unit.mood > -1) and (unit.mood < 7) then print(dfhack.TranslateName(unit.name,true).." is nuts.. and worthless trash *elitist snort*... but tasty.") unit.flags2.slaughter=true end end

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.mood=7

:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then unit.flags1.tame=true unit.training_level = 7 end end

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit)
//child
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 103 unit.profession2 = 103
//std
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 102 unit.profession2 = 102
//war
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 99 unit.profession2 = 99
//hunting
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.profession = 98 unit.profession2 = 98

:lua for _,populations in ipairs(df.global.ui.main.fortress_entity.populations) do printall(populations) end

//sentience
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) df.creature_raw.find(unit.race).flags.CASTE_CAN_SPEAK = true df.creature_raw.find(unit.race).flags.CASTE_CAN_LEARN = true

:lua for _,unit in ipairs(df.global.world.raws.creatures.all) do if (unit.flags.DOES_NOT_EXIST == true) then print(_,unit.creature_id) end end
:lua df.global.world.raws.creatures.all[556].flags.DOES_NOT_EXIST == false

:lua for _,unit in ipairs(df.global.world.units.all) do if (df.creature_raw.find(unit.race).flags.DOES_NOT_EXIST == true) then print(_,unit.creature_id) end end

:lua for _,unit in ipairs(df.global.world.units.active) do if (df.creature_raw.find(unit.race).flags.CASTE_CAN_SPEAK == true) then print(dfhack.TranslateName(unit.name,true)," is a ", df.creature_raw.find(unit.race).creature_id) end end

:lua for _,unit in ipairs(df.global.world.units.all) do if (df.creature_raw.find(unit.race).flags.CASTE_UNIQUE_DEMON == true) then print(_,unit.creature_id) end end

:lua unit=dfhack.gui.getSelectedUnit() df.creature_raw.find(unit.race).caste[unit.caste].fixed_temp=60001

:lua unit=dfhack.gui.getSelectedUnit() print(df.creature_raw.find(unit.race).caste[unit.caste].fixed_temp)


:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then print(dfhack.TranslateName(unit.name,true).. " is a " ..df.creature_raw.find(unit.race).creature_id.. "(" ..df.creature_raw.find(unit.race).caste[unit.caste].caste_name[0]..") and their gender is ") if (df.creature_raw.find(unit.race).caste[unit.caste].gender == 0) then print("Female [0]") elseif (df.creature_raw.find(unit.race).caste[unit.caste].gender == 1) then print("Male [1]") else print("Other [cabbage]") end end end end


:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then print(dfhack.TranslateName(unit.name,true)) end end end

:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then print(dfhack.TranslateName(unit.name,true).. " is a " ..df.creature_raw.find(unit.race).creature_id.. "(" ..df.creature_raw.find(unit.race).caste[unit.caste].caste_name[0]..") and their temp is " ..df.creature_raw.find(unit.race).caste[unit.caste].fixed_temp.." Urist") end end end

:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if (unit.race == df.global.ui.race_id) then print(dfhack.TranslateName(unit.name,true).." is getting sent to the Thunderdome to WORK THEIR SHIT OUT.") unit.pos.x=95 unit.pos.y=97 unit.pos.z=67 end


:lua function find_entity(id) for ii = 0,#df.global.world.entities.all - 1 do if df.global.world.entities.all[ii].id == id then return ii end end return -1 end print(find_entity(df.global.ui.main.fortress_entity.entity_links[0].target))
--aka df.global.ui.civ_id .... so why do people look it up the hard way? lack of docs?


:lua for _,species in ipairs(df.global.world.raws.creatures.all) do for x,type in ipairs(species.caste) do if type.flags.DEMON==true then print(type.caste_name[0],..,species.creature_id,"are Demons") end end end
:lua for _,species in ipairs(df.global.world.raws.creatures.all) do for x,type in ipairs(species.caste) do if species.flags.GENERATED==true then print(type.caste_name[0],"",species.creature_id,"was generated.") end end end


:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then print(dfhack.TranslateName(unit.name,true)) end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if not (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then if (unit.flags1.hidden_in_ambush==true) or (unit.flags1.hidden_ambusher==true) then print(dfhack.TranslateName(unit.name,true).. " is a " ..df.creature_raw.find(unit.race).creature_id.. "(" ..df.creature_raw.find(unit.race).caste[unit.caste].caste_name[0]..") and their temp is " ..df.creature_raw.find(unit.race).caste[unit.caste].fixed_temp.." Urist") end end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags3.scuttle==true then unit.animal.vanish_countdown=2 end end
:lua for _,unit in ipairs(df.global.world.units.active) do unit.flags1.on_ground=false end

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.status.labors) unit.status.labors.MINE = true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.status.labors) unit.status.labors.FISH = true
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit.status.labors) unit.status.labors.HUNT = true
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then unit.status.labors.MINE = true end end end

#useless I know I know but still. BE HAPPY! >:-(
:lua for _,unit in ipairs(df.global.world.units.active) do unit.status.current_soul.personality.stress_level = -4000 end
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.civ_id == df.global.ui.civ_id) then if not (unit.flags1.dead) then unit.flags3.emotionally_overloaded = FALSE end end end

#I hate broken caravans... and caravans overstaying their welcome in general.
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags1.merchant==true then unit.flags1.left=true end end
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags1.forest==true then unit.flags1.left=true end end

#The weird things I've done before I found this gem ;;;>.>
:lua ~df.global.cursor
#Use that then this. replace the 68,92,119 with new x/y/z
:lua item=dfhack.gui.getSelectedItem() dfhack.items.moveToGround(item,{x=79,y=138,z=71})
#Check out a spot first... with this! Bye bye zoom
:lua df.global.cursor.x=111 df.global.cursor.y=1 df.global.cursor.z=124

#Moved down here... closer to the cursor set.
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.pos.x=134 unit.pos.y=94 unit.pos.z=87
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) unit.path.dest.x=37 unit.pos.x=37 unit.path.dest.y=94 unit.pos.y=94 unit.path.dest.z=123 unit.pos.z=123 unit.flags1.on_ground=false

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(unit) unit.name.nickname="Bump" unit.name.has_name=true

#I'm butchering your stupid pet... and his buddy that refuses to stop pining for the militia recruit.
:lua for _,unit in ipairs(df.global.world.units.active) do unit.relations.following = nil end
:lua for _,unit in ipairs(df.global.world.units.active) do unit.relations.pet_owner_id = -1 end

#Individually tag "tweak clear-missing"? Nope!
:lua for _,unit in ipairs(df.global.world.units.active) do if (unit.counters.death_id ~= -1) then death=df.incident.find(unit.counters.death_id) death.flags.discovered=true end end

:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) printall(df.historical_figure.find(unit.hist_figure_id))
:lua unit=dfhack.gui.getSelectedUnit() print(dfhack.TranslateName(unit.name,true)) fig=df.historical_figure.find(unit.hist_figure_id) printall(fig)

:lua entity=df.historical_entity.find(1894) print(dfhack.TranslateName(entity.name,true)) printall(entity)
#Oh my god this damned bug is showing me really odd things...
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.hist_figure_id~=-1 then fig=df.historical_figure.find(unit.hist_figure_id) zig=0 for k,v in pairs(fig.entity_links) do zig=zig+1 end zig=zig-1 while zig ~= -1 do print(dfhack.TranslateName(df.historical_entity.find(fig.entity_links[zig].entity_id).name,true)) zig=zig-1 end end end

#These should all match. Paranoia sucks.
:lua ~df.global.world.raws.creatures.all[df.historical_entity.find(df.global.ui.main.fortress_entity.id).race].creature_id
:lua ~df.global.world.raws.creatures.all[df.historical_entity.find(df.global.ui.civ_id).race].creature_id
:lua ~df.global.world.raws.creatures.all[df.global.ui.race_id].creature_id
:lua ~df.creature_raw.find(df.global.ui.race_id).creature_id

#Good for Resurrecting Wagons that have died of fright
:lua item=dfhack.gui.getSelectedItem() unit=item.general_refs[0].unit_id perp=df.unit.find(unit) print(df.creature_raw.find(perp.race).creature_id) perp.flags1.dead=false perp.flags1.merchant=false perp.flags1.incoming=false perp.flags1.ridden=false
:lua perp=dfhack.gui.getSelectedUnit() print(df.creature_raw.find(perp.race).creature_id) perp.flags1.dead=false perp.flags1.merchant=false perp.flags1.incoming=false perp.flags1.ridden=false perp.flags3.scuttle=false
#More Diplomacy Friendly version.
:lua perp=dfhack.gui.getSelectedUnit() print(df.creature_raw.find(perp.race).creature_id) perp.flags1.dead=false perp.flags3.scuttle=false

#bugger off
:lua unit=dfhack.gui.getSelectedUnit() unit.flags1.diplomat=true unit.meeting.state=3 unit.animal.leave_countdown=20000
#bugger off already tagged freaks.
:lua unit=dfhack.gui.getSelectedUnit() if unit.flags1.diplomat==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 end
:lua unit=dfhack.gui.getSelectedUnit() if unit.flags1.merchant==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 end
:lua unit=dfhack.gui.getSelectedUnit() if unit.flags1.forest==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 end
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags1.diplomat==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 end end
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags1.merchant==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 end end
:lua for _,unit in ipairs(df.global.world.units.active) do if unit.flags1.forest==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 end end

:lua for _,unit in ipairs(df.global.world.units.active) do if not unit.race==df.global.ui.race_id then unit.status.labors
:lua for _,unit in ipairs(df.global.world.units.active) do if not unit.race==df.global.ui.race_id then unit.status.labors.HAUL_FURNITURE=false unit.status.labors.HAUL_ITEM=false unit.status.labors.HAUL_ANIMALS=false unit.status.labors.HANDLE_VEHICLES=false unit.status.labors.HAUL_TRADE=false unit.status.labors.PULL_LEVER=false unit.status.labors.HAUL_WATER=false end end

:lua item=dfhack.gui.getSelectedItem() for ref,value in ipairs(item.general_refs) do if not ref=="building_id" then item.flags.in_building=false end end
:lua for _,item in pairs(df.global.world.items.other.IN_PLAY) do item.flags.in_building=false end


#No you are not friendly!
:lua for _,unit in ipairs(df.global.world.units.active) do if df.creature_raw.find(unit.race).creature_id=="GARDOHN" then if unit.flags1.diplomat==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 unit.incoming=false end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if df.creature_raw.find(unit.race).creature_id=="GARDOHN" then if unit.flags1.merchant==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 unit.incoming=false end end end
:lua for _,unit in ipairs(df.global.world.units.active) do if df.creature_raw.find(unit.race).creature_id=="GARDOHN" then if unit.flags1.forest==true then unit.meeting.state=3 unit.animal.leave_countdown=20000 unit.incoming=false end end end

#No more mister nice guy
:lua for _,unit in ipairs(df.global.world.units.active) do if df.creature_raw.find(unit.race).creature_id=="GARDOHN" then unit.flags1.left=true end end
